{"version":3,"file":"ppn-form-slide-pdl.js","sourceRoot":"","sources":["../../../../src/webcomponents/common/forms/ppn-form-slide-pdl.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAA;AAC1B,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAA;AACjD,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAA;AAE/C,OAAO,aAAa,CAAA;AAEpB;;;;;;GAMG;AAEH,IAAqB,eAAe,GAApC,MAAqB,eAAgB,SAAQ,YAAY;IAE5C,MAAM;QACX,OAAO,IAAI,CAAA;+CAC4B,IAAI,CAAC,cAAc;mCAC9B,IAAI,CAAC,SAAS,CAAC,KAAM;kBACtC,IAAI,CAAC,sBAAsB,EAAG;;SAExC,CAAA;IACL,CAAC;IAED;;;;OAIG;IACK,cAAc,CAAC,CAAS;QAC5B,MAAM,UAAU,GAAW,CAAC,CAAC,MAAM,CAAC;QAEpC,8BAA8B;QAC9B,IAAK,UAAU,KAAK,cAAc,IAAI,UAAU,KAAK,YAAY,EAAG;YAChE,MAAM,SAAS,GAAuB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,KAAK,cAAc,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,cAAc,CAAC,CAAA;YACtI,MAAM,SAAS,GAAuB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,KAAK,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAA;YAEtI,IAAK,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,IAAI;gBAAG,OAAO;YACvD,oEAAoE;YACpE,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAA;YAC7C,UAAU,CAAE,GAAG,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,EAAE,GAAG,CAAC,CAAC;YACrE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,EAAE,mBAAmB,CAAC,CAAA;SACxE;IACL,CAAC;CACJ,CAAA;AA/BoB,eAAe;IADnC,aAAa,CAAC,oBAAoB,CAAC;GACf,eAAe,CA+BnC;eA/BoB,eAAe","sourcesContent":["import { html } from 'lit'\nimport { customElement } from 'lit/decorators.js'\nimport { PpnFormSlide } from './ppn-form-slide'\nimport { IEvent } from '../../../assets/interfaces/iEvents'\nimport './ppn-radio'\n\n/**\n * <ppn-form-slide-pdl>\n * Doc: -\n *  \n * @author              : PS\n * @created             : 2022-08-05 [ WPS-4886 ]\n */\n@customElement('ppn-form-slide-pdl')\nexport default class PpnFormPdlSlide extends PpnFormSlide {\n\n    override render(): object {\n        return html`\n            <div id=\"slide-0\" @ppnRadioClick=${this._inputListener} class=\"slide\">\n                <p class=\"title\">${ this.dataSlide.title }</p>\n                ${ this.generateFormComponents() }\n            </div>\n        `\n    }\n\n    /** Listener for custom events from inputs\n     * @author                : PS\n     * @param  e {string}     : event\n     * @created               : 2022-08-05 [ WPS-4886 ]\n     */\n    private _inputListener(e: IEvent) {\n        const nameTarget: string = e.detail; \n\n        // Case event from first row: \n        if ( nameTarget === 'input-switch' || nameTarget === 'input-move' ) {\n            const rowActive: HTMLElement | null = this.renderRoot.querySelector(nameTarget === 'input-switch' ? '#inputs-switch' : '#inputs-move')\n            const rowHidden: HTMLElement | null = this.renderRoot.querySelector(nameTarget === 'input-switch' ? '#inputs-move' : '#inputs-switch')\n\n            if ( rowActive === null || rowHidden === null ) return; \n            // Display active row and trigger animation, and hide row not active\n            rowActive.classList.add(\"slide-row--display\")\n            setTimeout( () => rowActive.classList.add('slide-row--reveal'), 100);\n            rowHidden.classList.remove('slide-row--display', 'slide-row--reveal')\n        }\n    }\n}  "]}
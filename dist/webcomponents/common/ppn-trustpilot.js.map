{"version":3,"file":"ppn-trustpilot.js","sourceRoot":"","sources":["../../../src/webcomponents/common/ppn-trustpilot.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, TemplateResult, CSSResult, css} from \"lit\";\nimport { customElement, property } from 'lit/decorators.js';\nimport {getSvgFromSprite} from \"../../assets/functions/utils\";\n\n/**\n * <ppn-trustpilot>\n *\n * @author              : DK\n * @created             : 2022-08-01 [WPS-4772]\n * @attr is-active       : define if the block is show or not\n * @attr link           : the link to truspilot website\n * @attr rel            : rel of the link\n * @attr target         : link target\n * @attr rating         : rating of the website\n * @attr total-users     : number of user who gave review\n * @attr logo-src        : Trustpilot logo source\n * @attr logo-alt        : Trustpilot logo alt\n *\n *\n */\n\n@customElement('ppn-trustpilot')\nexport default class PpnTrustpilot extends LitElement {\n    @property({ type: Boolean, attribute: 'is-active' })\n    isActive = false;\n\n    @property({ type: String })\n    link = '';\n\n    @property({ type: String })\n    rel = '';\n\n    @property({ type: String })\n    target = '';\n\n    @property({ type: Number })\n    rating = 0;\n\n    @property({ type: String, attribute: 'total-users'})\n    totalUsers= '';\n\n    @property({ type: Number, attribute: 'total-stars' })\n    totalStars = 5;\n\n    @property ({ type: String, attribute: 'logo-alt' })\n    logoAlt = \"\"\n\n    @property ({ type: String, attribute: 'logo-src' })\n    logoSrc = \"\"\n\n    static override styles: CSSResult = css`\n        a {\n            position: relative;\n            display: flex;\n            flex-direction: row;\n            justify-content: space-between;\n            font-size: var( --fs-xs);\n            color: var(--c-black);\n            text-decoration: none;\n        }\n\n        .star {\n            display: inline-block;\n            padding: calc(var(--pd-2xs) / 2);\n        }\n\n        svg {\n            width: var(--sz-md);\n            height: var(--sz-md);\n        }\n\n        .total-users {\n            display: block;\n        }\n\n        .logo {\n            display: none;\n        }\n\n        .logo img {\n            max-width: calc(var(--sz-3xl) * 2);\n            height: auto;\n        }\n\n        @media (max-width: 767px) {\n            :host {\n                background-color: var(--c-white);\n                padding: var(--sz-sm) var(--sz-xl);\n            }\n\n            .logo {\n                display: block;\n            }\n\n            a:after {\n                content: '';\n                position: absolute;\n                left: 50%;\n                top: 0;\n                height: 100%;\n                width: 1px;\n                background-color: var(--c-grey-main);\n                transform: translateX(-50%);\n            }\n        }\n    `\n\n    /**\n     * Set Trustpilot stars depending on rating value\n     * @author                 : DK\n     * @created                : 2022-05-22 [WPS-4768]\n     * @return                 : Array of stars\n     */\n\n    protected _displayStar(mode: String): TemplateResult {\n        return html`<span class=\"star\">${getSvgFromSprite('icon_star_' + mode)}</span>`\n    }\n\n    protected _createStar(): TemplateResult {\n        const number = Math.floor(this.rating);\n\n        return html `\n            ${ [...Array(this.totalStars)].map((_, index) => {\n                return index < number ? this._displayStar('full')\n                    : (index < this.rating) ? this._displayStar('half')\n                    : this._displayStar('empty')\n            })}\n        `\n    }\n\n    override render(): TemplateResult {\n        return html `\n          ${ (this.rating)  ?\n                html `\n                  <a href=\"${this.link}\" rel=\"${this.rel}\" target=\"${this.target}\">\n                    <span class=\"logo\">\n                      <img src=\"${this.logoSrc}\" alt=\"${this.logoAlt}\" loading=\"lazy\">\n                    </span>\n                    <span class=\"stars-wrapper\">\n                      <span class=\"stars\">${ this._createStar() }</span>\n                      <span class=\"total-users\">${ this.totalUsers }</span>\n                    </span>\n                  </a>`\n                : ''\n            }\n          `\n    }\n}"]}
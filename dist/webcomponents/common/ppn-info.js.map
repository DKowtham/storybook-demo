{"version":3,"file":"ppn-info.js","sourceRoot":"","sources":["../../../src/webcomponents/common/ppn-info.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAA6B,GAAG,EAAE,MAAM,KAAK,CAAA;AACtE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAA;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAA;AAEhE;;;;;;;;;;GAUG;AAEH,IAAa,OAAO,GAApB,MAAa,OAAQ,SAAQ,UAAU;IAAvC;;QAGI,aAAQ,GAAG,EAAE,CAAA;QAGb,cAAS,GAAG,EAAE,CAAA;QAGd,cAAS,GAAG,EAAE,CAAA;IA0FlB,CAAC;IAVa,MAAM;QAEZ,OAAO,IAAI,CAAA;cACL,aAAa;6BACE,IAAI,CAAC,QAAQ;cAC3B,IAAI,CAAC,SAAS;YACb,CAAC,CAAC,IAAI,CAAA,4CAA4C,IAAI,CAAC,SAAS,cAAc;YAC9E,CAAC,CAAC,EAAG;SACZ,CAAA;IACL,CAAC;CACJ,CAAA;AAxFmB,cAAM,GAAgB;IAClC,aAAa;IACb,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA0EN;CAAE,CAAA;AApFH;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAC,CAAC;yCACpC;AAGb;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAC,CAAC;0CACpC;AAGd;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;0CACX;AATL,OAAO;IADnB,aAAa,CAAC,UAAU,CAAC;GACb,OAAO,CAmGnB;SAnGY,OAAO","sourcesContent":["import { LitElement, html, TemplateResult, CSSResult, css } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { svg_icon_info } from '../../assets/svg/icons-svg'\nimport { style_reset_p } from '../../assets/styles/reset-styles'\n\n/**\n * <ppn-info>\n * Doc: TODO\n *\n * @author                : PS\n * @created               : 2022-05-22 [WPS-4768]\n * @attr call-href        : url for day mode\n * @attr info-text        : text for the info (or compliance) component\n * @attr hover-ext        : text that shows when info_text is hovered\n * @attr direction        : direction of the rows. Available options: \"reverse\"\n */\n@customElement('ppn-info')\nexport class PpnInfo extends LitElement {\n\n    @property({type: String, attribute: 'info-text'})\n    infoText = ''\n\n    @property({type: String, attribute: 'hover-text'})\n    hoverText = ''\n\n    @property({type: String})\n    direction = ''\n\n    static override styles: CSSResult[] = [\n        style_reset_p,\n        css`\n\n        :host {\n            cursor: help;\n            position: relative;\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            width: fit-content;\n            color: var(--c-grey-txt-light);\n        }\n\n        :host([direction=\"reverse\"]) {\n            flex-direction: row-reverse;\n            margin-left: auto;\n        }\n\n        :is(p, .txt-hover)  {\n            font-size: var(--fs-xs);\n            font-weight: var(--fw-medium);\n            color: currentColor;\n            transition: color var(--trans-base);\n        }\n\n        :host(:hover) {\n            color: var(--c-grey-txt-dark);\n        }\n\n        :host(:hover) .txt-hover {\n            opacity: 1;\n            pointer-events: all;\n        }\n\n        svg {\n            color: currentColor;\n            height: var(--sz-md);\n            width: var(--sz-md);\n            padding: var(--pd-xs) 0;\n        }\n\n        .txt {\n            padding: 0 var(--pd-xs);\n        }\n\n        .txt-hover {\n            position: absolute;\n            pointer-events: none;\n            max-width: 230px;\n            right: 0;\n            opacity: 0;\n            background-color: var(--c-white);\n            padding: var(--pd-md);\n            border-radius: var(--br-base);\n            box-shadow: var(--bs-lg);\n            transition: opacity var(--tr-fast);\n        }\n\n        .txt-hover::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            height: var(--sz-md);\n            width: var(--sz-md);\n            background-color: var(--c-white);\n            transform: rotate(45deg) translateX(-50%);\n        }\n\n        .wrap {\n            position: absolute;\n            height: 0;\n            width: 100%;\n            bottom: 0;\n            z-index: var(--zi-10);\n        }\n    `];\n\n     override render(): TemplateResult {\n\n        return html`\n            ${svg_icon_info}\n            <p class=\"txt\">${this.infoText}</p>\n            ${ this.hoverText\n                ? html`<div class=\"wrap\"><div class=\"txt-hover\">${this.hoverText}</div></div>`\n                : `` }\n        `\n    }\n}\n\n"]}
{"version":3,"file":"ppn-callout.js","sourceRoot":"","sources":["../../../src/webcomponents/common/ppn-callout.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAA6B,GAAG,EAAE,MAAM,KAAK,CAAA;AACtE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D;;;;;;;;;GASG;AAEH,IAAqB,UAAU,GAA/B,MAAqB,UAAW,SAAQ,UAAU;IAAlD;;QAGa,UAAK,GAAG,EAAE,CAAC;QAGpB,SAAI,GAAa,EAAE,CAAC;IAsFxB,CAAC;IAhBY,MAAM;QAEX,OAAO,IAAI,CAAA;;kBAED,IAAI,CAAC,KAAK,KAAK,EAAE;YACf,CAAC,CAAC,IAAI,CAAA,oBAAoB,IAAI,CAAC,KAAK,MAAM;YAC1C,CAAC,CAAC,IAAI,CAAA,EACV;;kBAEE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;YAClB,CAAC,CAAC,IAAI,CAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,OAAO,IAAI,CAAA,OAAO,IAAI,OAAO,CAAA,CAAC,CAAC,CAAC,OAAO;YAC5E,CAAC,CAAC,EACN;;SAEP,CAAA;IACL,CAAC;CACJ,CAAA;AApFmB,iBAAM,GAAc,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAkErC,CAAA;AAvEF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;yCACL;AAGpB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;wCACJ;AANH,UAAU;IAD9B,aAAa,CAAC,aAAa,CAAC;GACR,UAAU,CA4F9B;eA5FoB,UAAU","sourcesContent":["import { LitElement, html, TemplateResult, CSSResult, css } from 'lit'\nimport { customElement, property } from 'lit/decorators.js';\n\n/**\n * <ppn-callout>\n * Doc: https://www.notion.so/papernest/ppn-callout-72a9196c015f4ed78e13097bb4c50866\n *  \n * @author              : PS\n * @created             : 2022-05-22 [WPS-4772]\n * @attr title          : The title of the callout\n * @attr list           : an array of items in form of string\n * @slot                : This element uses a slot as text content\n */\n@customElement('ppn-callout')\nexport default class PpnCallout extends LitElement {\n\n    @property({type: String})\n    override title = '';\n\n    @property({type: Array})\n    list: string[] = [];\n    \n    static override styles: CSSResult = css`\n\n        :host {\n            display: block;\n            padding: var(--pd-block); \n            margin: var(--mg-between-sm) 0;\n        }\n\n        :host([type=\"info\"]) {\n            --color-callout-type: var(--c-primary);\n        }\n\n        :host([type=\"danger\"]) {\n            --color-callout-type: var(--c-red);\n        }\n\n        :host([type=\"success\"]) {\n            --color-callout-type: var(--c-secondary);\n        }\n\n        .container {\n            box-sizing: border-box;\n            width: 100%; \n            padding: var(--pd-lg);\n            border-radius: var(--br-sm);\n            border-left: solid var(--sz-2xs) var(--color-callout-type);\n            background-color: var(--c-bg-main);\n        }\n\n        .container:last-child {\n            margin-bottom: 0;\n        }\n\n        .title {\n            font-weight: var(--fw-medium); \n            color: var(--color-callout-type);\n            margin: 0 0 var(--mg-xs) 0;\n        }\n\n        @media (min-width:768px) {\n            .container {\n                padding: var(--pd-lg) var(--pd-2xl);\n            }\n        }\n\n        ul {\n            list-style: none;\n            padding: 0; \n        }\n\n        li {\n            position: relative;\n            padding-left: var(--pd-md);\n        }\n\n        li:before {\n            content: \"\";\n            position: absolute;\n            width: 8px;\n            height: 8px;\n            border-radius: var(--br-circle);\n            left: 0;\n            top: 50%;\n            background-color: var(--color-callout-type);\n            transform: translateY(-50%);\n        }\n    `;\n\n    override render(): TemplateResult {\n\n        return html`\n            <div class=\"container\">\n                ${this.title !== \"\" \n                    ? html`<p class=\"title\">${this.title}</p>` \n                    : html``\n                }\n                <slot></slot>\n                ${this.list.length > 0 \n                    ? html`<ul>${this.list.map(item => { return html`<li>${item}</li>` })}</ul>`\n                    : ``\n                }\n            </div>\n        `\n    }\n}\n"]}
{"version":3,"file":"ppn-form-slide.js","sourceRoot":"","sources":["../../../../src/webcomponents/common/forms/ppn-form-slide.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAkB,GAAG,EAAa,MAAM,KAAK,CAAA;AACtE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAE3D,OAAO,sDAAsD,CAAA;AAC7D,OAAO,aAAa,CAAA;AAEpB;;;;;;;GAOG;AAEH,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,UAAU;IAA5C;;QAGI,cAAS,GAAe;YACpB,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;SACb,CAAA;IA4EL,CAAC;IA1BG;;;OAGG;IACH,sBAAsB;QAClB,MAAM,SAAS,GAAqB,EAAE,CAAA;QAEtC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YAEvC,4DAA4D;YAC5D,QAAO,KAAK,CAAC,IAAI,EAAE;gBAEf,KAAK,WAAW,CAAC,CAAC;oBACd,SAAS,CAAC,IAAI,CAAE,IAAI,CAAA;;iDAEU,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC,sCAAsC,CAAC,CAAC,CAAC,EAAG;kCACtF,KAAK,CAAC,SAAS;mDACE,KAAK;;qBAEnC,CAAC,CAAA;iBACL;aACJ;SACJ;QAED,OAAO,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAA,EAAE,CAAA;IACpD,CAAC;CACJ,CAAA;AA1EmB,mBAAM,GACd,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aA4CD,CAAA;AAlDV;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;+CAI9B;AANQ,YAAY;IADxB,aAAa,CAAC,gBAAgB,CAAC;GACnB,YAAY,CAkFxB;SAlFY,YAAY","sourcesContent":["import { LitElement, html, TemplateResult, css, CSSResult } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\nimport { IFormSlide } from '../../../assets/interfaces/iForms'\nimport '../../../../lib/webcomponents/common/forms/ppn-radio'\nimport './ppn-radio'\n\n/**\n * <ppn-form-slide>\n * Doc: -\n *  \n * @author              : PS\n * @created             : 2022-08-05 [ WPS-4886 ]\n * @prop dataSlide      : corresponding data object for the slide\n */\n@customElement('ppn-form-slide')\nexport class PpnFormSlide extends LitElement {\n\n    @property({ attribute: false })\n    dataSlide: IFormSlide = {\n        title: '',\n        inputs: []\n    }\n\n    static override styles: CSSResult = \n            css`           \n                .slide {\n                    box-sizing: border-box;\n                    width: var(--width-slide);\n                    margin: 0 auto;\n                    padding: var(--pd-lg);\n                    margin-bottom: 0 auto var(--mg-lg) auto;\n                    border-radius: var(--br-lg);\n                    box-shadow: var(--bs-scale-base) var(--c-primary-lighter);\n                    background: var(--c-white);\n                }\n\n                .slide-hidden {\n                    display: none;\n                }\n\n                .slide > *:last-child {\n                    margin-bottom: 0;\n                }\n\n                .slide-row {\n                    display: none;\n                    opacity: 0; \n                    transform: translateY(var(--sz-2xs)); \n                    transition: opacity var(--tr-base), transform var(--tr-base);\n                }\n\n                .slide-row--display {\n                    display: block; \n                }\n\n                .slide-row--reveal {\n                    opacity: 1;\n                    transform: translateY(0);\n                }\n\n                .title {\n                    margin-bottom: var(--mg-lg);\n                    padding-bottom: var(--pd-xs);\n                    border-bottom: 1px solid var(--c-grey-inactive);\n                    text-align: left;\n                    font-size: var(--fs-lg);\n                    font-weight: var(--fw-bold);\n                }\n            `;\n\n\n    /** Generate inputs from data \n     * @author                : PS\n     * @created               : 2022-08-05 [ WPS-4886 ]\n     */\n    generateFormComponents(): TemplateResult[] | TemplateResult {\n        const templates: TemplateResult[] = []\n\n        for (const input of this.dataSlide.inputs) {\n            \n            // Here we add the all the input rows depending on the type:\n            switch(input.type) {\n                \n                case \"ppn-radio\": {\n                    templates.push( html`\n                        <div \n                            class = \"slide-row ${ input.active === 'true' ? 'slide-row--display slide-row--reveal' : '' }\" \n                            id=\"${input.nameGroup}\"\n                            ><ppn-radio .dataRow=${input}></ppn-radio>\n                        </div>\n                    `)\n                }\n            }\n        }\n\n        return templates.length > 0 ? templates : html``\n    }\n}  "]}